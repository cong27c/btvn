<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Products | Admin Dashboard</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link rel="stylesheet" href="/assets/css/common.css" />
    <link rel="stylesheet" href="/assets/css/main.css" />
    <link rel="stylesheet" href="/assets/css/dashboard.css" />
  </head>
  <body>
    <div class="app-container">
      <!-- Sidebar -->
      <aside class="sidebar">
        <div class="sidebar-logo">
          <h1>Admin Dashboard</h1>
        </div>

        <nav class="sidebar-menu">
          <a href="/admin" class="menu-item">
            <i class="fas fa-home"></i>
            Dashboard
          </a>
          <a href="/admin/categories" class="menu-item">
            <i class="fas fa-tags"></i>
            Categories
          </a>
          <a href="/admin/products" class="menu-item active">
            <i class="fas fa-shopping-cart"></i>
            Products
          </a>
          <a href="/admin/topics" class="menu-item">
            <i class="fas fa-bookmark"></i>
            Topics
          </a>
          <a href="/admin/posts" class="menu-item">
            <i class="fas fa-file-alt"></i>
            Posts
          </a>
          <a href="/admin/comments" class="menu-item">
            <i class="fas fa-comments"></i>
            Comments
          </a>
          <a href="/admin/users" class="menu-item">
            <i class="fas fa-user"></i>
            Users
          </a>
          <a href="/admin/analytics" class="menu-item">
            <i class="fas fa-chart-bar"></i>
            Analytics
          </a>
          <a href="/admin/settings" class="menu-item">
            <i class="fas fa-cog"></i>
            Settings
          </a>
        </nav>

        <div class="user-profile" id="userProfileDropdown">
          <div class="avatar">JD</div>
          <div class="user-info">
            <p>John Doe</p>
            <small>Administrator</small>
          </div>
          <i class="fas fa-chevron-down dropdown-icon"></i>
          <div class="user-dropdown">
            <a href="/admin/account-settings" class="dropdown-item">
              <i class="fas fa-user-cog"></i> Account Settings
            </a>
            <a href="/admin/login" class="dropdown-item">
              <i class="fas fa-sign-out-alt"></i> Logout
            </a>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <main class="content-wrapper"><%- body %></main>
    </div>

    <!-- Confirm Dialog -->
    <div class="modal" id="confirmDeleteModal">
      <div class="modal-content">
        <h3 class="modal-title">Confirm Delete</h3>
        <div class="modal-body">
          Are you sure you want to delete "<span id="deleteItemName"></span>"?
          This action cannot be undone.
        </div>
        <div class="modal-footer">
          <button
            type="button"
            id="cancelDelete"
            class="btn btn-secondary"
            data-cancel
          >
            Cancel
          </button>
          <button
            type="button"
            id="confirmDelete"
            class="btn btn-danger"
            data-confirm
          >
            Delete
          </button>
        </div>
      </div>
    </div>

    <script src="/assets/js/dashboard.js"></script>
    <script src="/assets/js/common.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Initialize form validation
        initFormValidation("filterForm");

        // Setup filter form
        const filterForm = document.getElementById("filterForm");
        filterForm.addEventListener("submit", function (event) {
          event.preventDefault();

          if (validateForm("filterForm")) {
            // Get filter values
            const name = document.getElementById("filterName").value;
            const category = document.getElementById("filterCategory").value;
            const status = document.getElementById("filterStatus").value;

            // Filter items (in a real application, this would likely be an API call)
            console.log("Filtering with:", {
              name,
              category,
              status,
            });

            // Show success message
            showMessage(
              "filterSuccess",
              `Applied filters: Name="${name}", Category="${category}", Status="${status}"`,
              3000
            );
          }
        });

        // Reset filters
        document
          .getElementById("resetFilters")
          .addEventListener("click", function () {
            resetForm("filterForm");
          });

        // Validate alphanumeric input
        document.getElementById("filterName").addEventListener(
          "input",
          debounce(function () {
            const input = this;
            const value = input.value.trim();

            // Only validate if there's a value (the field is not required)
            if (value !== "" && !/^[a-zA-Z0-9\s]+$/.test(value)) {
              document.getElementById("filterNameError").style.display =
                "block";
              document.getElementById("filterNameError").textContent =
                "Name can only contain letters, numbers, and spaces.";
              input.classList.add("error");
            } else {
              document.getElementById("filterNameError").style.display = "none";
              input.classList.remove("error");
            }
          }, 300)
        );

        // Setup pagination
        const paginationLinks = document.querySelectorAll(".pagination li a");
        paginationLinks.forEach((link) => {
          link.addEventListener("click", function (e) {
            e.preventDefault();

            // Remove active class from all links
            paginationLinks.forEach((l) =>
              l.parentElement.classList.remove("active")
            );

            // Add active class to clicked link
            this.parentElement.classList.add("active");

            // Get page number
            const page = this.getAttribute("data-page");

            // Update pagination info
            document.querySelector(".pagination-info").textContent = `Showing ${
              (page - 1) * 10 + 1
            }-${Math.min(page * 10, 56)} of 56 items`;
          });
        });

        // Setup delete confirmation
        const deleteButtons = document.querySelectorAll(".delete-item");
        deleteButtons.forEach((button) => {
          button.addEventListener("click", async function (e) {
            e.preventDefault();

            const itemId = this.getAttribute("data-id");
            const itemName = this.getAttribute("data-name");

            // Set item name in modal
            document.getElementById("deleteItemName").textContent = itemName;

            // Show confirmation dialog
            const result = await showConfirmDialog("confirmDeleteModal", {
              title: "Confirm Delete",
              message: `Are you sure you want to delete "${itemName}"? This action cannot be undone.`,
            });

            if (result) {
              // Delete the item (in a real application, this would likely be an API call)
              console.log(`Deleting item with ID: ${itemId}`);

              // Remove item from table
              const itemRow = document.querySelector(`tr[data-id="${itemId}"]`);
              if (itemRow) {
                itemRow.remove();
              }
            }
          });
        });
      });
    </script>
  </body>
</html>
